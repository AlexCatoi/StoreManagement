// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMarket.Logic;

#nullable disable

namespace SuperMarket.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SuperMarket.Models.Bonuri", b =>
                {
                    b.Property<int>("BonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BonId"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DataEliberarii")
                        .HasColumnType("date");

                    b.Property<string>("NumeCasier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SumaTotala")
                        .HasColumnType("real");

                    b.HasKey("BonId");

                    b.ToTable("Bon");
                });

            modelBuilder.Entity("SuperMarket.Models.CategorieProdus", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategorieId"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategorieId");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("SuperMarket.Models.Producator", b =>
                {
                    b.Property<int>("ProducatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProducatorId"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("NumeProducator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaraProducator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProducatorId");

                    b.ToTable("Producator");
                });

            modelBuilder.Entity("SuperMarket.Models.Produs", b =>
                {
                    b.Property<int>("ProdusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdusId"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.Property<string>("CodBare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeProdus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PretProdus")
                        .HasColumnType("real");

                    b.Property<int>("ProducatorId")
                        .HasColumnType("int");

                    b.Property<int>("StocId")
                        .HasColumnType("int");

                    b.HasKey("ProdusId");

                    b.HasIndex("CategorieId");

                    b.HasIndex("ProducatorId");

                    b.HasIndex("StocId");

                    b.ToTable("Produs");
                });

            modelBuilder.Entity("SuperMarket.Models.ProdusePeBon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<int?>("BonuriBonId")
                        .HasColumnType("int");

                    b.Property<int>("ProdusId")
                        .HasColumnType("int");

                    b.Property<float>("Subtotal")
                        .HasColumnType("real");

                    b.Property<int>("cantitate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BonuriBonId");

                    b.HasIndex("ProdusId");

                    b.ToTable("ProdusePeBons");
                });

            modelBuilder.Entity("SuperMarket.Models.Stocuri", b =>
                {
                    b.Property<int>("StocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StocId"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<int>("Cantitate")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DataAprovizionarii")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataExpirarii")
                        .HasColumnType("date");

                    b.Property<string>("NumeProd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PretAchizitie")
                        .HasColumnType("real");

                    b.Property<float>("PretVanzare")
                        .HasColumnType("real");

                    b.Property<string>("StocName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitateMasura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StocId");

                    b.ToTable("Stoc");
                });

            modelBuilder.Entity("SuperMarket.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("NumeUtilizator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipUser")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Utilizator");
                });

            modelBuilder.Entity("SuperMarket.Models.Produs", b =>
                {
                    b.HasOne("SuperMarket.Models.CategorieProdus", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMarket.Models.Producator", "Producator")
                        .WithMany()
                        .HasForeignKey("ProducatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMarket.Models.Stocuri", "Stoc")
                        .WithMany()
                        .HasForeignKey("StocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Producator");

                    b.Navigation("Stoc");
                });

            modelBuilder.Entity("SuperMarket.Models.ProdusePeBon", b =>
                {
                    b.HasOne("SuperMarket.Models.Bonuri", null)
                        .WithMany("ProduseVandute")
                        .HasForeignKey("BonuriBonId");

                    b.HasOne("SuperMarket.Models.Produs", "Produs")
                        .WithMany()
                        .HasForeignKey("ProdusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produs");
                });

            modelBuilder.Entity("SuperMarket.Models.Bonuri", b =>
                {
                    b.Navigation("ProduseVandute");
                });
#pragma warning restore 612, 618
        }
    }
}
